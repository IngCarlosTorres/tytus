Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    add
    alter
    between
    boolean
    character
    check
    column
    constraint
    databases
    day
    default
    dospuntos
    double
    drop
    enum
    exist
    foreign
    hour
    if
    ilike
    in
    inherits
    insert
    interval
    into
    isnull
    key
    like
    llavea
    llavec
    minute
    mode
    money
    month
    notnull
    null
    owner
    precision
    primary
    r_bigint
    r_char
    r_date
    r_decimal
    r_integer
    r_numeric
    r_real
    r_smallint
    r_time
    r_timestamp
    references
    rename
    replace
    second
    set
    show
    simboloor
    similar
    symetric
    table
    to
    type
    unique
    unknown
    update
    values
    varyng
    without
    year
    zone

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> OPLOGICA
Rule 5     instruccion -> SELECT
Rule 6     SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING
Rule 7     SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING
Rule 8     LSELECT -> LEXP
Rule 9     LSELECT -> multiplicacion
Rule 10    LFROM -> LEXP
Rule 11    LFROM -> para SELECT parc
Rule 12    WHERE -> where EXP
Rule 13    WHERE -> <empty>
Rule 14    GROUP -> group by EXP
Rule 15    GROUP -> <empty>
Rule 16    HAVING -> having EXP
Rule 17    HAVING -> ptcoma
Rule 18    OPLOGICA -> not RELACIONAL
Rule 19    OPLOGICA -> OPLOGICA and RELACIONAL
Rule 20    OPLOGICA -> OPLOGICA or RELACIONAL
Rule 21    RELACIONAL -> RELACIONAL mayor EXP
Rule 22    RELACIONAL -> RELACIONAL menor EXP
Rule 23    RELACIONAL -> RELACIONAL mayor_igual EXP
Rule 24    RELACIONAL -> RELACIONAL menor_igual EXP
Rule 25    RELACIONAL -> RELACIONAL igual EXP
Rule 26    RELACIONAL -> RELACIONAL diferente1 EXP
Rule 27    RELACIONAL -> RELACIONAL diferente2 EXP
Rule 28    RELACIONAL -> EXP
Rule 29    LEXP -> LEXP coma EXP
Rule 30    LEXP -> EXP
Rule 31    EXP -> EXP mas EXP1
Rule 32    EXP -> EXP menos EXP1
Rule 33    EXP -> EXP multiplicacion EXP1
Rule 34    EXP -> EXP division EXP1
Rule 35    EXP -> EXP1
Rule 36    EXP1 -> EXP1 modulo EXP2
Rule 37    EXP1 -> EXP1 elevado EXP2
Rule 38    EXP1 -> EXP2
Rule 39    EXP2 -> para EXP parac
Rule 40    EXP2 -> UNARIO EXP
Rule 41    EXP2 -> int
Rule 42    EXP2 -> decimal
Rule 43    EXP2 -> varchar
Rule 44    EXP2 -> char
Rule 45    EXP2 -> true
Rule 46    EXP2 -> false
Rule 47    EXP2 -> id
Rule 48    EXP2 -> id punto EXP
Rule 49    UNARIO -> mas
Rule 50    UNARIO -> menos

Terminals, with rules where they appear

add                  : 
alter                : 
and                  : 19
between              : 
boolean              : 
by                   : 14
char                 : 44
character            : 
check                : 
column               : 
coma                 : 29
constraint           : 
databases            : 
day                  : 
decimal              : 42
default              : 
diferente1           : 26
diferente2           : 27
distinct             : 6
division             : 34
dospuntos            : 
double               : 
drop                 : 
elevado              : 37
enum                 : 
error                : 
exist                : 
false                : 46
foreign              : 
group                : 14
having               : 16
hour                 : 
id                   : 47 48
if                   : 
igual                : 25
ilike                : 
in                   : 
inherits             : 
insert               : 
int                  : 41
interval             : 
into                 : 
isnull               : 
key                  : 
like                 : 
llavea               : 
llavec               : 
mas                  : 31 49
mayor                : 21
mayor_igual          : 23
menor                : 22
menor_igual          : 24
menos                : 32 50
minute               : 
mode                 : 
modulo               : 36
money                : 
month                : 
multiplicacion       : 9 33
not                  : 18
notnull              : 
null                 : 
or                   : 20
owner                : 
para                 : 11 39
parac                : 39
parc                 : 11
precision            : 
primary              : 
ptcoma               : 17
punto                : 48
r_bigint             : 
r_char               : 
r_date               : 
r_decimal            : 
r_from               : 6 7
r_integer            : 
r_numeric            : 
r_real               : 
r_smallint           : 
r_time               : 
r_timestamp          : 
references           : 
rename               : 
replace              : 
second               : 
select               : 6 7
set                  : 
show                 : 
simboloor            : 
similar              : 
symetric             : 
table                : 
to                   : 
true                 : 45
type                 : 
unique               : 
unknown              : 
update               : 
values               : 
varchar              : 43
varyng               : 
where                : 12
without              : 
year                 : 
zone                 : 

Nonterminals, with rules where they appear

EXP                  : 12 14 16 21 22 23 24 25 26 27 28 29 30 31 32 33 34 39 40 48
EXP1                 : 31 32 33 34 35 36 37
EXP2                 : 36 37 38
GROUP                : 6 7
HAVING               : 6 7
LEXP                 : 8 10 29
LFROM                : 6 7
LSELECT              : 6 7
OPLOGICA             : 4 19 20
RELACIONAL           : 18 19 20 21 22 23 24 25 26 27
SELECT               : 5 11
UNARIO               : 40
WHERE                : 6 7
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . OPLOGICA
    (5) instruccion -> . SELECT
    (18) OPLOGICA -> . not RELACIONAL
    (19) OPLOGICA -> . OPLOGICA and RELACIONAL
    (20) OPLOGICA -> . OPLOGICA or RELACIONAL
    (6) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING
    (7) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING

    not             shift and go to state 6
    select          shift and go to state 7

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    OPLOGICA                       shift and go to state 4
    SELECT                         shift and go to state 5

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . OPLOGICA
    (5) instruccion -> . SELECT
    (18) OPLOGICA -> . not RELACIONAL
    (19) OPLOGICA -> . OPLOGICA and RELACIONAL
    (20) OPLOGICA -> . OPLOGICA or RELACIONAL
    (6) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING
    (7) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING

    $end            reduce using rule 1 (init -> instrucciones .)
    not             shift and go to state 6
    select          shift and go to state 7

    instruccion                    shift and go to state 8
    OPLOGICA                       shift and go to state 4
    SELECT                         shift and go to state 5

state 3

    (3) instrucciones -> instruccion .

    not             reduce using rule 3 (instrucciones -> instruccion .)
    select          reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> OPLOGICA .
    (19) OPLOGICA -> OPLOGICA . and RELACIONAL
    (20) OPLOGICA -> OPLOGICA . or RELACIONAL

    not             reduce using rule 4 (instruccion -> OPLOGICA .)
    select          reduce using rule 4 (instruccion -> OPLOGICA .)
    $end            reduce using rule 4 (instruccion -> OPLOGICA .)
    and             shift and go to state 9
    or              shift and go to state 10


state 5

    (5) instruccion -> SELECT .

    not             reduce using rule 5 (instruccion -> SELECT .)
    select          reduce using rule 5 (instruccion -> SELECT .)
    $end            reduce using rule 5 (instruccion -> SELECT .)


state 6

    (18) OPLOGICA -> not . RELACIONAL
    (21) RELACIONAL -> . RELACIONAL mayor EXP
    (22) RELACIONAL -> . RELACIONAL menor EXP
    (23) RELACIONAL -> . RELACIONAL mayor_igual EXP
    (24) RELACIONAL -> . RELACIONAL menor_igual EXP
    (25) RELACIONAL -> . RELACIONAL igual EXP
    (26) RELACIONAL -> . RELACIONAL diferente1 EXP
    (27) RELACIONAL -> . RELACIONAL diferente2 EXP
    (28) RELACIONAL -> . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    RELACIONAL                     shift and go to state 11
    EXP                            shift and go to state 12
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 7

    (6) SELECT -> select . distinct LSELECT r_from LFROM WHERE GROUP HAVING
    (7) SELECT -> select . LSELECT r_from LFROM WHERE GROUP HAVING
    (8) LSELECT -> . LEXP
    (9) LSELECT -> . multiplicacion
    (29) LEXP -> . LEXP coma EXP
    (30) LEXP -> . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    distinct        shift and go to state 26
    multiplicacion  shift and go to state 29
    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    LSELECT                        shift and go to state 27
    LEXP                           shift and go to state 28
    EXP                            shift and go to state 30
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 8

    (2) instrucciones -> instrucciones instruccion .

    not             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    select          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 9

    (19) OPLOGICA -> OPLOGICA and . RELACIONAL
    (21) RELACIONAL -> . RELACIONAL mayor EXP
    (22) RELACIONAL -> . RELACIONAL menor EXP
    (23) RELACIONAL -> . RELACIONAL mayor_igual EXP
    (24) RELACIONAL -> . RELACIONAL menor_igual EXP
    (25) RELACIONAL -> . RELACIONAL igual EXP
    (26) RELACIONAL -> . RELACIONAL diferente1 EXP
    (27) RELACIONAL -> . RELACIONAL diferente2 EXP
    (28) RELACIONAL -> . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    RELACIONAL                     shift and go to state 31
    EXP                            shift and go to state 12
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 10

    (20) OPLOGICA -> OPLOGICA or . RELACIONAL
    (21) RELACIONAL -> . RELACIONAL mayor EXP
    (22) RELACIONAL -> . RELACIONAL menor EXP
    (23) RELACIONAL -> . RELACIONAL mayor_igual EXP
    (24) RELACIONAL -> . RELACIONAL menor_igual EXP
    (25) RELACIONAL -> . RELACIONAL igual EXP
    (26) RELACIONAL -> . RELACIONAL diferente1 EXP
    (27) RELACIONAL -> . RELACIONAL diferente2 EXP
    (28) RELACIONAL -> . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    RELACIONAL                     shift and go to state 32
    EXP                            shift and go to state 12
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 11

    (18) OPLOGICA -> not RELACIONAL .
    (21) RELACIONAL -> RELACIONAL . mayor EXP
    (22) RELACIONAL -> RELACIONAL . menor EXP
    (23) RELACIONAL -> RELACIONAL . mayor_igual EXP
    (24) RELACIONAL -> RELACIONAL . menor_igual EXP
    (25) RELACIONAL -> RELACIONAL . igual EXP
    (26) RELACIONAL -> RELACIONAL . diferente1 EXP
    (27) RELACIONAL -> RELACIONAL . diferente2 EXP

    and             reduce using rule 18 (OPLOGICA -> not RELACIONAL .)
    or              reduce using rule 18 (OPLOGICA -> not RELACIONAL .)
    not             reduce using rule 18 (OPLOGICA -> not RELACIONAL .)
    select          reduce using rule 18 (OPLOGICA -> not RELACIONAL .)
    $end            reduce using rule 18 (OPLOGICA -> not RELACIONAL .)
    mayor           shift and go to state 33
    menor           shift and go to state 34
    mayor_igual     shift and go to state 35
    menor_igual     shift and go to state 36
    igual           shift and go to state 37
    diferente1      shift and go to state 38
    diferente2      shift and go to state 39


state 12

    (28) RELACIONAL -> EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    mayor           reduce using rule 28 (RELACIONAL -> EXP .)
    menor           reduce using rule 28 (RELACIONAL -> EXP .)
    mayor_igual     reduce using rule 28 (RELACIONAL -> EXP .)
    menor_igual     reduce using rule 28 (RELACIONAL -> EXP .)
    igual           reduce using rule 28 (RELACIONAL -> EXP .)
    diferente1      reduce using rule 28 (RELACIONAL -> EXP .)
    diferente2      reduce using rule 28 (RELACIONAL -> EXP .)
    and             reduce using rule 28 (RELACIONAL -> EXP .)
    or              reduce using rule 28 (RELACIONAL -> EXP .)
    not             reduce using rule 28 (RELACIONAL -> EXP .)
    select          reduce using rule 28 (RELACIONAL -> EXP .)
    $end            reduce using rule 28 (RELACIONAL -> EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 13

    (49) UNARIO -> mas .

    para            reduce using rule 49 (UNARIO -> mas .)
    int             reduce using rule 49 (UNARIO -> mas .)
    decimal         reduce using rule 49 (UNARIO -> mas .)
    varchar         reduce using rule 49 (UNARIO -> mas .)
    char            reduce using rule 49 (UNARIO -> mas .)
    true            reduce using rule 49 (UNARIO -> mas .)
    false           reduce using rule 49 (UNARIO -> mas .)
    id              reduce using rule 49 (UNARIO -> mas .)
    mas             reduce using rule 49 (UNARIO -> mas .)
    menos           reduce using rule 49 (UNARIO -> mas .)


state 14

    (35) EXP -> EXP1 .
    (36) EXP1 -> EXP1 . modulo EXP2
    (37) EXP1 -> EXP1 . elevado EXP2

  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
    mas             reduce using rule 35 (EXP -> EXP1 .)
    menos           reduce using rule 35 (EXP -> EXP1 .)
    multiplicacion  reduce using rule 35 (EXP -> EXP1 .)
    division        reduce using rule 35 (EXP -> EXP1 .)
    mayor           reduce using rule 35 (EXP -> EXP1 .)
    menor           reduce using rule 35 (EXP -> EXP1 .)
    mayor_igual     reduce using rule 35 (EXP -> EXP1 .)
    menor_igual     reduce using rule 35 (EXP -> EXP1 .)
    igual           reduce using rule 35 (EXP -> EXP1 .)
    diferente1      reduce using rule 35 (EXP -> EXP1 .)
    diferente2      reduce using rule 35 (EXP -> EXP1 .)
    and             reduce using rule 35 (EXP -> EXP1 .)
    or              reduce using rule 35 (EXP -> EXP1 .)
    not             reduce using rule 35 (EXP -> EXP1 .)
    select          reduce using rule 35 (EXP -> EXP1 .)
    $end            reduce using rule 35 (EXP -> EXP1 .)
    coma            reduce using rule 35 (EXP -> EXP1 .)
    r_from          reduce using rule 35 (EXP -> EXP1 .)
    parac           reduce using rule 35 (EXP -> EXP1 .)
    where           reduce using rule 35 (EXP -> EXP1 .)
    group           reduce using rule 35 (EXP -> EXP1 .)
    having          reduce using rule 35 (EXP -> EXP1 .)
    ptcoma          reduce using rule 35 (EXP -> EXP1 .)
    parc            reduce using rule 35 (EXP -> EXP1 .)
    modulo          shift and go to state 44
    elevado         shift and go to state 45

  ! modulo          [ reduce using rule 35 (EXP -> EXP1 .) ]
  ! elevado         [ reduce using rule 35 (EXP -> EXP1 .) ]


state 15

    (50) UNARIO -> menos .

    para            reduce using rule 50 (UNARIO -> menos .)
    int             reduce using rule 50 (UNARIO -> menos .)
    decimal         reduce using rule 50 (UNARIO -> menos .)
    varchar         reduce using rule 50 (UNARIO -> menos .)
    char            reduce using rule 50 (UNARIO -> menos .)
    true            reduce using rule 50 (UNARIO -> menos .)
    false           reduce using rule 50 (UNARIO -> menos .)
    id              reduce using rule 50 (UNARIO -> menos .)
    mas             reduce using rule 50 (UNARIO -> menos .)
    menos           reduce using rule 50 (UNARIO -> menos .)


state 16

    (38) EXP1 -> EXP2 .

    modulo          reduce using rule 38 (EXP1 -> EXP2 .)
    elevado         reduce using rule 38 (EXP1 -> EXP2 .)
    mas             reduce using rule 38 (EXP1 -> EXP2 .)
    menos           reduce using rule 38 (EXP1 -> EXP2 .)
    multiplicacion  reduce using rule 38 (EXP1 -> EXP2 .)
    division        reduce using rule 38 (EXP1 -> EXP2 .)
    mayor           reduce using rule 38 (EXP1 -> EXP2 .)
    menor           reduce using rule 38 (EXP1 -> EXP2 .)
    mayor_igual     reduce using rule 38 (EXP1 -> EXP2 .)
    menor_igual     reduce using rule 38 (EXP1 -> EXP2 .)
    igual           reduce using rule 38 (EXP1 -> EXP2 .)
    diferente1      reduce using rule 38 (EXP1 -> EXP2 .)
    diferente2      reduce using rule 38 (EXP1 -> EXP2 .)
    and             reduce using rule 38 (EXP1 -> EXP2 .)
    or              reduce using rule 38 (EXP1 -> EXP2 .)
    not             reduce using rule 38 (EXP1 -> EXP2 .)
    select          reduce using rule 38 (EXP1 -> EXP2 .)
    $end            reduce using rule 38 (EXP1 -> EXP2 .)
    coma            reduce using rule 38 (EXP1 -> EXP2 .)
    r_from          reduce using rule 38 (EXP1 -> EXP2 .)
    parac           reduce using rule 38 (EXP1 -> EXP2 .)
    where           reduce using rule 38 (EXP1 -> EXP2 .)
    group           reduce using rule 38 (EXP1 -> EXP2 .)
    having          reduce using rule 38 (EXP1 -> EXP2 .)
    ptcoma          reduce using rule 38 (EXP1 -> EXP2 .)
    parc            reduce using rule 38 (EXP1 -> EXP2 .)


state 17

    (39) EXP2 -> para . EXP parac
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 46
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 18

    (40) EXP2 -> UNARIO . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    UNARIO                         shift and go to state 18
    EXP                            shift and go to state 47
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16

state 19

    (41) EXP2 -> int .

    modulo          reduce using rule 41 (EXP2 -> int .)
    elevado         reduce using rule 41 (EXP2 -> int .)
    mas             reduce using rule 41 (EXP2 -> int .)
    menos           reduce using rule 41 (EXP2 -> int .)
    multiplicacion  reduce using rule 41 (EXP2 -> int .)
    division        reduce using rule 41 (EXP2 -> int .)
    mayor           reduce using rule 41 (EXP2 -> int .)
    menor           reduce using rule 41 (EXP2 -> int .)
    mayor_igual     reduce using rule 41 (EXP2 -> int .)
    menor_igual     reduce using rule 41 (EXP2 -> int .)
    igual           reduce using rule 41 (EXP2 -> int .)
    diferente1      reduce using rule 41 (EXP2 -> int .)
    diferente2      reduce using rule 41 (EXP2 -> int .)
    and             reduce using rule 41 (EXP2 -> int .)
    or              reduce using rule 41 (EXP2 -> int .)
    not             reduce using rule 41 (EXP2 -> int .)
    select          reduce using rule 41 (EXP2 -> int .)
    $end            reduce using rule 41 (EXP2 -> int .)
    coma            reduce using rule 41 (EXP2 -> int .)
    r_from          reduce using rule 41 (EXP2 -> int .)
    parac           reduce using rule 41 (EXP2 -> int .)
    where           reduce using rule 41 (EXP2 -> int .)
    group           reduce using rule 41 (EXP2 -> int .)
    having          reduce using rule 41 (EXP2 -> int .)
    ptcoma          reduce using rule 41 (EXP2 -> int .)
    parc            reduce using rule 41 (EXP2 -> int .)


state 20

    (42) EXP2 -> decimal .

    modulo          reduce using rule 42 (EXP2 -> decimal .)
    elevado         reduce using rule 42 (EXP2 -> decimal .)
    mas             reduce using rule 42 (EXP2 -> decimal .)
    menos           reduce using rule 42 (EXP2 -> decimal .)
    multiplicacion  reduce using rule 42 (EXP2 -> decimal .)
    division        reduce using rule 42 (EXP2 -> decimal .)
    mayor           reduce using rule 42 (EXP2 -> decimal .)
    menor           reduce using rule 42 (EXP2 -> decimal .)
    mayor_igual     reduce using rule 42 (EXP2 -> decimal .)
    menor_igual     reduce using rule 42 (EXP2 -> decimal .)
    igual           reduce using rule 42 (EXP2 -> decimal .)
    diferente1      reduce using rule 42 (EXP2 -> decimal .)
    diferente2      reduce using rule 42 (EXP2 -> decimal .)
    and             reduce using rule 42 (EXP2 -> decimal .)
    or              reduce using rule 42 (EXP2 -> decimal .)
    not             reduce using rule 42 (EXP2 -> decimal .)
    select          reduce using rule 42 (EXP2 -> decimal .)
    $end            reduce using rule 42 (EXP2 -> decimal .)
    coma            reduce using rule 42 (EXP2 -> decimal .)
    r_from          reduce using rule 42 (EXP2 -> decimal .)
    parac           reduce using rule 42 (EXP2 -> decimal .)
    where           reduce using rule 42 (EXP2 -> decimal .)
    group           reduce using rule 42 (EXP2 -> decimal .)
    having          reduce using rule 42 (EXP2 -> decimal .)
    ptcoma          reduce using rule 42 (EXP2 -> decimal .)
    parc            reduce using rule 42 (EXP2 -> decimal .)


state 21

    (43) EXP2 -> varchar .

    modulo          reduce using rule 43 (EXP2 -> varchar .)
    elevado         reduce using rule 43 (EXP2 -> varchar .)
    mas             reduce using rule 43 (EXP2 -> varchar .)
    menos           reduce using rule 43 (EXP2 -> varchar .)
    multiplicacion  reduce using rule 43 (EXP2 -> varchar .)
    division        reduce using rule 43 (EXP2 -> varchar .)
    mayor           reduce using rule 43 (EXP2 -> varchar .)
    menor           reduce using rule 43 (EXP2 -> varchar .)
    mayor_igual     reduce using rule 43 (EXP2 -> varchar .)
    menor_igual     reduce using rule 43 (EXP2 -> varchar .)
    igual           reduce using rule 43 (EXP2 -> varchar .)
    diferente1      reduce using rule 43 (EXP2 -> varchar .)
    diferente2      reduce using rule 43 (EXP2 -> varchar .)
    and             reduce using rule 43 (EXP2 -> varchar .)
    or              reduce using rule 43 (EXP2 -> varchar .)
    not             reduce using rule 43 (EXP2 -> varchar .)
    select          reduce using rule 43 (EXP2 -> varchar .)
    $end            reduce using rule 43 (EXP2 -> varchar .)
    coma            reduce using rule 43 (EXP2 -> varchar .)
    r_from          reduce using rule 43 (EXP2 -> varchar .)
    parac           reduce using rule 43 (EXP2 -> varchar .)
    where           reduce using rule 43 (EXP2 -> varchar .)
    group           reduce using rule 43 (EXP2 -> varchar .)
    having          reduce using rule 43 (EXP2 -> varchar .)
    ptcoma          reduce using rule 43 (EXP2 -> varchar .)
    parc            reduce using rule 43 (EXP2 -> varchar .)


state 22

    (44) EXP2 -> char .

    modulo          reduce using rule 44 (EXP2 -> char .)
    elevado         reduce using rule 44 (EXP2 -> char .)
    mas             reduce using rule 44 (EXP2 -> char .)
    menos           reduce using rule 44 (EXP2 -> char .)
    multiplicacion  reduce using rule 44 (EXP2 -> char .)
    division        reduce using rule 44 (EXP2 -> char .)
    mayor           reduce using rule 44 (EXP2 -> char .)
    menor           reduce using rule 44 (EXP2 -> char .)
    mayor_igual     reduce using rule 44 (EXP2 -> char .)
    menor_igual     reduce using rule 44 (EXP2 -> char .)
    igual           reduce using rule 44 (EXP2 -> char .)
    diferente1      reduce using rule 44 (EXP2 -> char .)
    diferente2      reduce using rule 44 (EXP2 -> char .)
    and             reduce using rule 44 (EXP2 -> char .)
    or              reduce using rule 44 (EXP2 -> char .)
    not             reduce using rule 44 (EXP2 -> char .)
    select          reduce using rule 44 (EXP2 -> char .)
    $end            reduce using rule 44 (EXP2 -> char .)
    coma            reduce using rule 44 (EXP2 -> char .)
    r_from          reduce using rule 44 (EXP2 -> char .)
    parac           reduce using rule 44 (EXP2 -> char .)
    where           reduce using rule 44 (EXP2 -> char .)
    group           reduce using rule 44 (EXP2 -> char .)
    having          reduce using rule 44 (EXP2 -> char .)
    ptcoma          reduce using rule 44 (EXP2 -> char .)
    parc            reduce using rule 44 (EXP2 -> char .)


state 23

    (45) EXP2 -> true .

    modulo          reduce using rule 45 (EXP2 -> true .)
    elevado         reduce using rule 45 (EXP2 -> true .)
    mas             reduce using rule 45 (EXP2 -> true .)
    menos           reduce using rule 45 (EXP2 -> true .)
    multiplicacion  reduce using rule 45 (EXP2 -> true .)
    division        reduce using rule 45 (EXP2 -> true .)
    mayor           reduce using rule 45 (EXP2 -> true .)
    menor           reduce using rule 45 (EXP2 -> true .)
    mayor_igual     reduce using rule 45 (EXP2 -> true .)
    menor_igual     reduce using rule 45 (EXP2 -> true .)
    igual           reduce using rule 45 (EXP2 -> true .)
    diferente1      reduce using rule 45 (EXP2 -> true .)
    diferente2      reduce using rule 45 (EXP2 -> true .)
    and             reduce using rule 45 (EXP2 -> true .)
    or              reduce using rule 45 (EXP2 -> true .)
    not             reduce using rule 45 (EXP2 -> true .)
    select          reduce using rule 45 (EXP2 -> true .)
    $end            reduce using rule 45 (EXP2 -> true .)
    coma            reduce using rule 45 (EXP2 -> true .)
    r_from          reduce using rule 45 (EXP2 -> true .)
    parac           reduce using rule 45 (EXP2 -> true .)
    where           reduce using rule 45 (EXP2 -> true .)
    group           reduce using rule 45 (EXP2 -> true .)
    having          reduce using rule 45 (EXP2 -> true .)
    ptcoma          reduce using rule 45 (EXP2 -> true .)
    parc            reduce using rule 45 (EXP2 -> true .)


state 24

    (46) EXP2 -> false .

    modulo          reduce using rule 46 (EXP2 -> false .)
    elevado         reduce using rule 46 (EXP2 -> false .)
    mas             reduce using rule 46 (EXP2 -> false .)
    menos           reduce using rule 46 (EXP2 -> false .)
    multiplicacion  reduce using rule 46 (EXP2 -> false .)
    division        reduce using rule 46 (EXP2 -> false .)
    mayor           reduce using rule 46 (EXP2 -> false .)
    menor           reduce using rule 46 (EXP2 -> false .)
    mayor_igual     reduce using rule 46 (EXP2 -> false .)
    menor_igual     reduce using rule 46 (EXP2 -> false .)
    igual           reduce using rule 46 (EXP2 -> false .)
    diferente1      reduce using rule 46 (EXP2 -> false .)
    diferente2      reduce using rule 46 (EXP2 -> false .)
    and             reduce using rule 46 (EXP2 -> false .)
    or              reduce using rule 46 (EXP2 -> false .)
    not             reduce using rule 46 (EXP2 -> false .)
    select          reduce using rule 46 (EXP2 -> false .)
    $end            reduce using rule 46 (EXP2 -> false .)
    coma            reduce using rule 46 (EXP2 -> false .)
    r_from          reduce using rule 46 (EXP2 -> false .)
    parac           reduce using rule 46 (EXP2 -> false .)
    where           reduce using rule 46 (EXP2 -> false .)
    group           reduce using rule 46 (EXP2 -> false .)
    having          reduce using rule 46 (EXP2 -> false .)
    ptcoma          reduce using rule 46 (EXP2 -> false .)
    parc            reduce using rule 46 (EXP2 -> false .)


state 25

    (47) EXP2 -> id .
    (48) EXP2 -> id . punto EXP

    modulo          reduce using rule 47 (EXP2 -> id .)
    elevado         reduce using rule 47 (EXP2 -> id .)
    mas             reduce using rule 47 (EXP2 -> id .)
    menos           reduce using rule 47 (EXP2 -> id .)
    multiplicacion  reduce using rule 47 (EXP2 -> id .)
    division        reduce using rule 47 (EXP2 -> id .)
    mayor           reduce using rule 47 (EXP2 -> id .)
    menor           reduce using rule 47 (EXP2 -> id .)
    mayor_igual     reduce using rule 47 (EXP2 -> id .)
    menor_igual     reduce using rule 47 (EXP2 -> id .)
    igual           reduce using rule 47 (EXP2 -> id .)
    diferente1      reduce using rule 47 (EXP2 -> id .)
    diferente2      reduce using rule 47 (EXP2 -> id .)
    and             reduce using rule 47 (EXP2 -> id .)
    or              reduce using rule 47 (EXP2 -> id .)
    not             reduce using rule 47 (EXP2 -> id .)
    select          reduce using rule 47 (EXP2 -> id .)
    $end            reduce using rule 47 (EXP2 -> id .)
    coma            reduce using rule 47 (EXP2 -> id .)
    r_from          reduce using rule 47 (EXP2 -> id .)
    parac           reduce using rule 47 (EXP2 -> id .)
    where           reduce using rule 47 (EXP2 -> id .)
    group           reduce using rule 47 (EXP2 -> id .)
    having          reduce using rule 47 (EXP2 -> id .)
    ptcoma          reduce using rule 47 (EXP2 -> id .)
    parc            reduce using rule 47 (EXP2 -> id .)
    punto           shift and go to state 48


state 26

    (6) SELECT -> select distinct . LSELECT r_from LFROM WHERE GROUP HAVING
    (8) LSELECT -> . LEXP
    (9) LSELECT -> . multiplicacion
    (29) LEXP -> . LEXP coma EXP
    (30) LEXP -> . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    multiplicacion  shift and go to state 29
    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    LSELECT                        shift and go to state 49
    LEXP                           shift and go to state 28
    EXP                            shift and go to state 30
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 27

    (7) SELECT -> select LSELECT . r_from LFROM WHERE GROUP HAVING

    r_from          shift and go to state 50


state 28

    (8) LSELECT -> LEXP .
    (29) LEXP -> LEXP . coma EXP

    r_from          reduce using rule 8 (LSELECT -> LEXP .)
    coma            shift and go to state 51


state 29

    (9) LSELECT -> multiplicacion .

    r_from          reduce using rule 9 (LSELECT -> multiplicacion .)


state 30

    (30) LEXP -> EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    coma            reduce using rule 30 (LEXP -> EXP .)
    r_from          reduce using rule 30 (LEXP -> EXP .)
    where           reduce using rule 30 (LEXP -> EXP .)
    group           reduce using rule 30 (LEXP -> EXP .)
    having          reduce using rule 30 (LEXP -> EXP .)
    ptcoma          reduce using rule 30 (LEXP -> EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 31

    (19) OPLOGICA -> OPLOGICA and RELACIONAL .
    (21) RELACIONAL -> RELACIONAL . mayor EXP
    (22) RELACIONAL -> RELACIONAL . menor EXP
    (23) RELACIONAL -> RELACIONAL . mayor_igual EXP
    (24) RELACIONAL -> RELACIONAL . menor_igual EXP
    (25) RELACIONAL -> RELACIONAL . igual EXP
    (26) RELACIONAL -> RELACIONAL . diferente1 EXP
    (27) RELACIONAL -> RELACIONAL . diferente2 EXP

    and             reduce using rule 19 (OPLOGICA -> OPLOGICA and RELACIONAL .)
    or              reduce using rule 19 (OPLOGICA -> OPLOGICA and RELACIONAL .)
    not             reduce using rule 19 (OPLOGICA -> OPLOGICA and RELACIONAL .)
    select          reduce using rule 19 (OPLOGICA -> OPLOGICA and RELACIONAL .)
    $end            reduce using rule 19 (OPLOGICA -> OPLOGICA and RELACIONAL .)
    mayor           shift and go to state 33
    menor           shift and go to state 34
    mayor_igual     shift and go to state 35
    menor_igual     shift and go to state 36
    igual           shift and go to state 37
    diferente1      shift and go to state 38
    diferente2      shift and go to state 39


state 32

    (20) OPLOGICA -> OPLOGICA or RELACIONAL .
    (21) RELACIONAL -> RELACIONAL . mayor EXP
    (22) RELACIONAL -> RELACIONAL . menor EXP
    (23) RELACIONAL -> RELACIONAL . mayor_igual EXP
    (24) RELACIONAL -> RELACIONAL . menor_igual EXP
    (25) RELACIONAL -> RELACIONAL . igual EXP
    (26) RELACIONAL -> RELACIONAL . diferente1 EXP
    (27) RELACIONAL -> RELACIONAL . diferente2 EXP

    and             reduce using rule 20 (OPLOGICA -> OPLOGICA or RELACIONAL .)
    or              reduce using rule 20 (OPLOGICA -> OPLOGICA or RELACIONAL .)
    not             reduce using rule 20 (OPLOGICA -> OPLOGICA or RELACIONAL .)
    select          reduce using rule 20 (OPLOGICA -> OPLOGICA or RELACIONAL .)
    $end            reduce using rule 20 (OPLOGICA -> OPLOGICA or RELACIONAL .)
    mayor           shift and go to state 33
    menor           shift and go to state 34
    mayor_igual     shift and go to state 35
    menor_igual     shift and go to state 36
    igual           shift and go to state 37
    diferente1      shift and go to state 38
    diferente2      shift and go to state 39


state 33

    (21) RELACIONAL -> RELACIONAL mayor . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 52
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 34

    (22) RELACIONAL -> RELACIONAL menor . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 53
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 35

    (23) RELACIONAL -> RELACIONAL mayor_igual . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 54
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 36

    (24) RELACIONAL -> RELACIONAL menor_igual . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 55
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 37

    (25) RELACIONAL -> RELACIONAL igual . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 56
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 38

    (26) RELACIONAL -> RELACIONAL diferente1 . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 57
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 39

    (27) RELACIONAL -> RELACIONAL diferente2 . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 58
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 40

    (31) EXP -> EXP mas . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP1                           shift and go to state 59
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 41

    (32) EXP -> EXP menos . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP1                           shift and go to state 60
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 42

    (33) EXP -> EXP multiplicacion . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP1                           shift and go to state 61
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 43

    (34) EXP -> EXP division . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP1                           shift and go to state 62
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 44

    (36) EXP1 -> EXP1 modulo . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP2                           shift and go to state 63
    UNARIO                         shift and go to state 18

state 45

    (37) EXP1 -> EXP1 elevado . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP2                           shift and go to state 64
    UNARIO                         shift and go to state 18

state 46

    (39) EXP2 -> para EXP . parac
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    parac           shift and go to state 65
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 47

    (40) EXP2 -> UNARIO EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
    modulo          reduce using rule 40 (EXP2 -> UNARIO EXP .)
    elevado         reduce using rule 40 (EXP2 -> UNARIO EXP .)
    mayor           reduce using rule 40 (EXP2 -> UNARIO EXP .)
    menor           reduce using rule 40 (EXP2 -> UNARIO EXP .)
    mayor_igual     reduce using rule 40 (EXP2 -> UNARIO EXP .)
    menor_igual     reduce using rule 40 (EXP2 -> UNARIO EXP .)
    igual           reduce using rule 40 (EXP2 -> UNARIO EXP .)
    diferente1      reduce using rule 40 (EXP2 -> UNARIO EXP .)
    diferente2      reduce using rule 40 (EXP2 -> UNARIO EXP .)
    and             reduce using rule 40 (EXP2 -> UNARIO EXP .)
    or              reduce using rule 40 (EXP2 -> UNARIO EXP .)
    not             reduce using rule 40 (EXP2 -> UNARIO EXP .)
    select          reduce using rule 40 (EXP2 -> UNARIO EXP .)
    $end            reduce using rule 40 (EXP2 -> UNARIO EXP .)
    coma            reduce using rule 40 (EXP2 -> UNARIO EXP .)
    r_from          reduce using rule 40 (EXP2 -> UNARIO EXP .)
    parac           reduce using rule 40 (EXP2 -> UNARIO EXP .)
    where           reduce using rule 40 (EXP2 -> UNARIO EXP .)
    group           reduce using rule 40 (EXP2 -> UNARIO EXP .)
    having          reduce using rule 40 (EXP2 -> UNARIO EXP .)
    ptcoma          reduce using rule 40 (EXP2 -> UNARIO EXP .)
    parc            reduce using rule 40 (EXP2 -> UNARIO EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43

  ! mas             [ reduce using rule 40 (EXP2 -> UNARIO EXP .) ]
  ! menos           [ reduce using rule 40 (EXP2 -> UNARIO EXP .) ]
  ! multiplicacion  [ reduce using rule 40 (EXP2 -> UNARIO EXP .) ]
  ! division        [ reduce using rule 40 (EXP2 -> UNARIO EXP .) ]


state 48

    (48) EXP2 -> id punto . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 66
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 49

    (6) SELECT -> select distinct LSELECT . r_from LFROM WHERE GROUP HAVING

    r_from          shift and go to state 67


state 50

    (7) SELECT -> select LSELECT r_from . LFROM WHERE GROUP HAVING
    (10) LFROM -> . LEXP
    (11) LFROM -> . para SELECT parc
    (29) LEXP -> . LEXP coma EXP
    (30) LEXP -> . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 70
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    LFROM                          shift and go to state 68
    LEXP                           shift and go to state 69
    EXP                            shift and go to state 30
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 51

    (29) LEXP -> LEXP coma . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 71
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 52

    (21) RELACIONAL -> RELACIONAL mayor EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    mayor           reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    menor           reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    mayor_igual     reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    menor_igual     reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    igual           reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    diferente1      reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    diferente2      reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    and             reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    or              reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    not             reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    select          reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    $end            reduce using rule 21 (RELACIONAL -> RELACIONAL mayor EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 53

    (22) RELACIONAL -> RELACIONAL menor EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    mayor           reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    menor           reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    mayor_igual     reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    menor_igual     reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    igual           reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    diferente1      reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    diferente2      reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    and             reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    or              reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    not             reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    select          reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    $end            reduce using rule 22 (RELACIONAL -> RELACIONAL menor EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 54

    (23) RELACIONAL -> RELACIONAL mayor_igual EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    mayor           reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    menor           reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    mayor_igual     reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    menor_igual     reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    igual           reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    diferente1      reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    diferente2      reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    and             reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    or              reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    not             reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    select          reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    $end            reduce using rule 23 (RELACIONAL -> RELACIONAL mayor_igual EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 55

    (24) RELACIONAL -> RELACIONAL menor_igual EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    mayor           reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    menor           reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    mayor_igual     reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    menor_igual     reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    igual           reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    diferente1      reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    diferente2      reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    and             reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    or              reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    not             reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    select          reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    $end            reduce using rule 24 (RELACIONAL -> RELACIONAL menor_igual EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 56

    (25) RELACIONAL -> RELACIONAL igual EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    mayor           reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    menor           reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    mayor_igual     reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    menor_igual     reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    igual           reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    diferente1      reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    diferente2      reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    and             reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    or              reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    not             reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    select          reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    $end            reduce using rule 25 (RELACIONAL -> RELACIONAL igual EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 57

    (26) RELACIONAL -> RELACIONAL diferente1 EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    mayor           reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    menor           reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    mayor_igual     reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    menor_igual     reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    igual           reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    diferente1      reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    diferente2      reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    and             reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    or              reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    not             reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    select          reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    $end            reduce using rule 26 (RELACIONAL -> RELACIONAL diferente1 EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 58

    (27) RELACIONAL -> RELACIONAL diferente2 EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    mayor           reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    menor           reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    mayor_igual     reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    menor_igual     reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    igual           reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    diferente1      reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    diferente2      reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    and             reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    or              reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    not             reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    select          reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    $end            reduce using rule 27 (RELACIONAL -> RELACIONAL diferente2 EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 59

    (31) EXP -> EXP mas EXP1 .
    (36) EXP1 -> EXP1 . modulo EXP2
    (37) EXP1 -> EXP1 . elevado EXP2

  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
    mas             reduce using rule 31 (EXP -> EXP mas EXP1 .)
    menos           reduce using rule 31 (EXP -> EXP mas EXP1 .)
    multiplicacion  reduce using rule 31 (EXP -> EXP mas EXP1 .)
    division        reduce using rule 31 (EXP -> EXP mas EXP1 .)
    mayor           reduce using rule 31 (EXP -> EXP mas EXP1 .)
    menor           reduce using rule 31 (EXP -> EXP mas EXP1 .)
    mayor_igual     reduce using rule 31 (EXP -> EXP mas EXP1 .)
    menor_igual     reduce using rule 31 (EXP -> EXP mas EXP1 .)
    igual           reduce using rule 31 (EXP -> EXP mas EXP1 .)
    diferente1      reduce using rule 31 (EXP -> EXP mas EXP1 .)
    diferente2      reduce using rule 31 (EXP -> EXP mas EXP1 .)
    and             reduce using rule 31 (EXP -> EXP mas EXP1 .)
    or              reduce using rule 31 (EXP -> EXP mas EXP1 .)
    not             reduce using rule 31 (EXP -> EXP mas EXP1 .)
    select          reduce using rule 31 (EXP -> EXP mas EXP1 .)
    $end            reduce using rule 31 (EXP -> EXP mas EXP1 .)
    coma            reduce using rule 31 (EXP -> EXP mas EXP1 .)
    r_from          reduce using rule 31 (EXP -> EXP mas EXP1 .)
    parac           reduce using rule 31 (EXP -> EXP mas EXP1 .)
    where           reduce using rule 31 (EXP -> EXP mas EXP1 .)
    group           reduce using rule 31 (EXP -> EXP mas EXP1 .)
    having          reduce using rule 31 (EXP -> EXP mas EXP1 .)
    ptcoma          reduce using rule 31 (EXP -> EXP mas EXP1 .)
    parc            reduce using rule 31 (EXP -> EXP mas EXP1 .)
    modulo          shift and go to state 44
    elevado         shift and go to state 45

  ! modulo          [ reduce using rule 31 (EXP -> EXP mas EXP1 .) ]
  ! elevado         [ reduce using rule 31 (EXP -> EXP mas EXP1 .) ]


state 60

    (32) EXP -> EXP menos EXP1 .
    (36) EXP1 -> EXP1 . modulo EXP2
    (37) EXP1 -> EXP1 . elevado EXP2

  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
    mas             reduce using rule 32 (EXP -> EXP menos EXP1 .)
    menos           reduce using rule 32 (EXP -> EXP menos EXP1 .)
    multiplicacion  reduce using rule 32 (EXP -> EXP menos EXP1 .)
    division        reduce using rule 32 (EXP -> EXP menos EXP1 .)
    mayor           reduce using rule 32 (EXP -> EXP menos EXP1 .)
    menor           reduce using rule 32 (EXP -> EXP menos EXP1 .)
    mayor_igual     reduce using rule 32 (EXP -> EXP menos EXP1 .)
    menor_igual     reduce using rule 32 (EXP -> EXP menos EXP1 .)
    igual           reduce using rule 32 (EXP -> EXP menos EXP1 .)
    diferente1      reduce using rule 32 (EXP -> EXP menos EXP1 .)
    diferente2      reduce using rule 32 (EXP -> EXP menos EXP1 .)
    and             reduce using rule 32 (EXP -> EXP menos EXP1 .)
    or              reduce using rule 32 (EXP -> EXP menos EXP1 .)
    not             reduce using rule 32 (EXP -> EXP menos EXP1 .)
    select          reduce using rule 32 (EXP -> EXP menos EXP1 .)
    $end            reduce using rule 32 (EXP -> EXP menos EXP1 .)
    coma            reduce using rule 32 (EXP -> EXP menos EXP1 .)
    r_from          reduce using rule 32 (EXP -> EXP menos EXP1 .)
    parac           reduce using rule 32 (EXP -> EXP menos EXP1 .)
    where           reduce using rule 32 (EXP -> EXP menos EXP1 .)
    group           reduce using rule 32 (EXP -> EXP menos EXP1 .)
    having          reduce using rule 32 (EXP -> EXP menos EXP1 .)
    ptcoma          reduce using rule 32 (EXP -> EXP menos EXP1 .)
    parc            reduce using rule 32 (EXP -> EXP menos EXP1 .)
    modulo          shift and go to state 44
    elevado         shift and go to state 45

  ! modulo          [ reduce using rule 32 (EXP -> EXP menos EXP1 .) ]
  ! elevado         [ reduce using rule 32 (EXP -> EXP menos EXP1 .) ]


state 61

    (33) EXP -> EXP multiplicacion EXP1 .
    (36) EXP1 -> EXP1 . modulo EXP2
    (37) EXP1 -> EXP1 . elevado EXP2

  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
    mas             reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    menos           reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    multiplicacion  reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    division        reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    mayor           reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    menor           reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    mayor_igual     reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    menor_igual     reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    igual           reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    diferente1      reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    diferente2      reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    and             reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    or              reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    not             reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    select          reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    $end            reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    coma            reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    r_from          reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    parac           reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    where           reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    group           reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    having          reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    ptcoma          reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    parc            reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .)
    modulo          shift and go to state 44
    elevado         shift and go to state 45

  ! modulo          [ reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .) ]
  ! elevado         [ reduce using rule 33 (EXP -> EXP multiplicacion EXP1 .) ]


state 62

    (34) EXP -> EXP division EXP1 .
    (36) EXP1 -> EXP1 . modulo EXP2
    (37) EXP1 -> EXP1 . elevado EXP2

  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for elevado resolved as shift
    mas             reduce using rule 34 (EXP -> EXP division EXP1 .)
    menos           reduce using rule 34 (EXP -> EXP division EXP1 .)
    multiplicacion  reduce using rule 34 (EXP -> EXP division EXP1 .)
    division        reduce using rule 34 (EXP -> EXP division EXP1 .)
    mayor           reduce using rule 34 (EXP -> EXP division EXP1 .)
    menor           reduce using rule 34 (EXP -> EXP division EXP1 .)
    mayor_igual     reduce using rule 34 (EXP -> EXP division EXP1 .)
    menor_igual     reduce using rule 34 (EXP -> EXP division EXP1 .)
    igual           reduce using rule 34 (EXP -> EXP division EXP1 .)
    diferente1      reduce using rule 34 (EXP -> EXP division EXP1 .)
    diferente2      reduce using rule 34 (EXP -> EXP division EXP1 .)
    and             reduce using rule 34 (EXP -> EXP division EXP1 .)
    or              reduce using rule 34 (EXP -> EXP division EXP1 .)
    not             reduce using rule 34 (EXP -> EXP division EXP1 .)
    select          reduce using rule 34 (EXP -> EXP division EXP1 .)
    $end            reduce using rule 34 (EXP -> EXP division EXP1 .)
    coma            reduce using rule 34 (EXP -> EXP division EXP1 .)
    r_from          reduce using rule 34 (EXP -> EXP division EXP1 .)
    parac           reduce using rule 34 (EXP -> EXP division EXP1 .)
    where           reduce using rule 34 (EXP -> EXP division EXP1 .)
    group           reduce using rule 34 (EXP -> EXP division EXP1 .)
    having          reduce using rule 34 (EXP -> EXP division EXP1 .)
    ptcoma          reduce using rule 34 (EXP -> EXP division EXP1 .)
    parc            reduce using rule 34 (EXP -> EXP division EXP1 .)
    modulo          shift and go to state 44
    elevado         shift and go to state 45

  ! modulo          [ reduce using rule 34 (EXP -> EXP division EXP1 .) ]
  ! elevado         [ reduce using rule 34 (EXP -> EXP division EXP1 .) ]


state 63

    (36) EXP1 -> EXP1 modulo EXP2 .

    modulo          reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    elevado         reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    mas             reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    menos           reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    multiplicacion  reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    division        reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    mayor           reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    menor           reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    mayor_igual     reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    menor_igual     reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    igual           reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    diferente1      reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    diferente2      reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    and             reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    or              reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    not             reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    select          reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    $end            reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    coma            reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    r_from          reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    parac           reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    where           reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    group           reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    having          reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    ptcoma          reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)
    parc            reduce using rule 36 (EXP1 -> EXP1 modulo EXP2 .)


state 64

    (37) EXP1 -> EXP1 elevado EXP2 .

    modulo          reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    elevado         reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    mas             reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    menos           reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    multiplicacion  reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    division        reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    mayor           reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    menor           reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    mayor_igual     reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    menor_igual     reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    igual           reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    diferente1      reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    diferente2      reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    and             reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    or              reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    not             reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    select          reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    $end            reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    coma            reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    r_from          reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    parac           reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    where           reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    group           reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    having          reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    ptcoma          reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)
    parc            reduce using rule 37 (EXP1 -> EXP1 elevado EXP2 .)


state 65

    (39) EXP2 -> para EXP parac .

    modulo          reduce using rule 39 (EXP2 -> para EXP parac .)
    elevado         reduce using rule 39 (EXP2 -> para EXP parac .)
    mas             reduce using rule 39 (EXP2 -> para EXP parac .)
    menos           reduce using rule 39 (EXP2 -> para EXP parac .)
    multiplicacion  reduce using rule 39 (EXP2 -> para EXP parac .)
    division        reduce using rule 39 (EXP2 -> para EXP parac .)
    mayor           reduce using rule 39 (EXP2 -> para EXP parac .)
    menor           reduce using rule 39 (EXP2 -> para EXP parac .)
    mayor_igual     reduce using rule 39 (EXP2 -> para EXP parac .)
    menor_igual     reduce using rule 39 (EXP2 -> para EXP parac .)
    igual           reduce using rule 39 (EXP2 -> para EXP parac .)
    diferente1      reduce using rule 39 (EXP2 -> para EXP parac .)
    diferente2      reduce using rule 39 (EXP2 -> para EXP parac .)
    and             reduce using rule 39 (EXP2 -> para EXP parac .)
    or              reduce using rule 39 (EXP2 -> para EXP parac .)
    not             reduce using rule 39 (EXP2 -> para EXP parac .)
    select          reduce using rule 39 (EXP2 -> para EXP parac .)
    $end            reduce using rule 39 (EXP2 -> para EXP parac .)
    coma            reduce using rule 39 (EXP2 -> para EXP parac .)
    r_from          reduce using rule 39 (EXP2 -> para EXP parac .)
    parac           reduce using rule 39 (EXP2 -> para EXP parac .)
    where           reduce using rule 39 (EXP2 -> para EXP parac .)
    group           reduce using rule 39 (EXP2 -> para EXP parac .)
    having          reduce using rule 39 (EXP2 -> para EXP parac .)
    ptcoma          reduce using rule 39 (EXP2 -> para EXP parac .)
    parc            reduce using rule 39 (EXP2 -> para EXP parac .)


state 66

    (48) EXP2 -> id punto EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for multiplicacion resolved as shift
  ! shift/reduce conflict for division resolved as shift
    modulo          reduce using rule 48 (EXP2 -> id punto EXP .)
    elevado         reduce using rule 48 (EXP2 -> id punto EXP .)
    mayor           reduce using rule 48 (EXP2 -> id punto EXP .)
    menor           reduce using rule 48 (EXP2 -> id punto EXP .)
    mayor_igual     reduce using rule 48 (EXP2 -> id punto EXP .)
    menor_igual     reduce using rule 48 (EXP2 -> id punto EXP .)
    igual           reduce using rule 48 (EXP2 -> id punto EXP .)
    diferente1      reduce using rule 48 (EXP2 -> id punto EXP .)
    diferente2      reduce using rule 48 (EXP2 -> id punto EXP .)
    and             reduce using rule 48 (EXP2 -> id punto EXP .)
    or              reduce using rule 48 (EXP2 -> id punto EXP .)
    not             reduce using rule 48 (EXP2 -> id punto EXP .)
    select          reduce using rule 48 (EXP2 -> id punto EXP .)
    $end            reduce using rule 48 (EXP2 -> id punto EXP .)
    coma            reduce using rule 48 (EXP2 -> id punto EXP .)
    r_from          reduce using rule 48 (EXP2 -> id punto EXP .)
    parac           reduce using rule 48 (EXP2 -> id punto EXP .)
    where           reduce using rule 48 (EXP2 -> id punto EXP .)
    group           reduce using rule 48 (EXP2 -> id punto EXP .)
    having          reduce using rule 48 (EXP2 -> id punto EXP .)
    ptcoma          reduce using rule 48 (EXP2 -> id punto EXP .)
    parc            reduce using rule 48 (EXP2 -> id punto EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43

  ! mas             [ reduce using rule 48 (EXP2 -> id punto EXP .) ]
  ! menos           [ reduce using rule 48 (EXP2 -> id punto EXP .) ]
  ! multiplicacion  [ reduce using rule 48 (EXP2 -> id punto EXP .) ]
  ! division        [ reduce using rule 48 (EXP2 -> id punto EXP .) ]


state 67

    (6) SELECT -> select distinct LSELECT r_from . LFROM WHERE GROUP HAVING
    (10) LFROM -> . LEXP
    (11) LFROM -> . para SELECT parc
    (29) LEXP -> . LEXP coma EXP
    (30) LEXP -> . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 70
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    LFROM                          shift and go to state 72
    LEXP                           shift and go to state 69
    EXP                            shift and go to state 30
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 68

    (7) SELECT -> select LSELECT r_from LFROM . WHERE GROUP HAVING
    (12) WHERE -> . where EXP
    (13) WHERE -> .

    where           shift and go to state 74
    group           reduce using rule 13 (WHERE -> .)
    having          reduce using rule 13 (WHERE -> .)
    ptcoma          reduce using rule 13 (WHERE -> .)

    WHERE                          shift and go to state 73

state 69

    (10) LFROM -> LEXP .
    (29) LEXP -> LEXP . coma EXP

    where           reduce using rule 10 (LFROM -> LEXP .)
    group           reduce using rule 10 (LFROM -> LEXP .)
    having          reduce using rule 10 (LFROM -> LEXP .)
    ptcoma          reduce using rule 10 (LFROM -> LEXP .)
    coma            shift and go to state 51


state 70

    (11) LFROM -> para . SELECT parc
    (39) EXP2 -> para . EXP parac
    (6) SELECT -> . select distinct LSELECT r_from LFROM WHERE GROUP HAVING
    (7) SELECT -> . select LSELECT r_from LFROM WHERE GROUP HAVING
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    select          shift and go to state 7
    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    SELECT                         shift and go to state 75
    EXP                            shift and go to state 46
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 71

    (29) LEXP -> LEXP coma EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    coma            reduce using rule 29 (LEXP -> LEXP coma EXP .)
    r_from          reduce using rule 29 (LEXP -> LEXP coma EXP .)
    where           reduce using rule 29 (LEXP -> LEXP coma EXP .)
    group           reduce using rule 29 (LEXP -> LEXP coma EXP .)
    having          reduce using rule 29 (LEXP -> LEXP coma EXP .)
    ptcoma          reduce using rule 29 (LEXP -> LEXP coma EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 72

    (6) SELECT -> select distinct LSELECT r_from LFROM . WHERE GROUP HAVING
    (12) WHERE -> . where EXP
    (13) WHERE -> .

    where           shift and go to state 74
    group           reduce using rule 13 (WHERE -> .)
    having          reduce using rule 13 (WHERE -> .)
    ptcoma          reduce using rule 13 (WHERE -> .)

    WHERE                          shift and go to state 76

state 73

    (7) SELECT -> select LSELECT r_from LFROM WHERE . GROUP HAVING
    (14) GROUP -> . group by EXP
    (15) GROUP -> .

    group           shift and go to state 78
    having          reduce using rule 15 (GROUP -> .)
    ptcoma          reduce using rule 15 (GROUP -> .)

    GROUP                          shift and go to state 77

state 74

    (12) WHERE -> where . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 79
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 75

    (11) LFROM -> para SELECT . parc

    parc            shift and go to state 80


state 76

    (6) SELECT -> select distinct LSELECT r_from LFROM WHERE . GROUP HAVING
    (14) GROUP -> . group by EXP
    (15) GROUP -> .

    group           shift and go to state 78
    having          reduce using rule 15 (GROUP -> .)
    ptcoma          reduce using rule 15 (GROUP -> .)

    GROUP                          shift and go to state 81

state 77

    (7) SELECT -> select LSELECT r_from LFROM WHERE GROUP . HAVING
    (16) HAVING -> . having EXP
    (17) HAVING -> . ptcoma

    having          shift and go to state 83
    ptcoma          shift and go to state 84

    HAVING                         shift and go to state 82

state 78

    (14) GROUP -> group . by EXP

    by              shift and go to state 85


state 79

    (12) WHERE -> where EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    group           reduce using rule 12 (WHERE -> where EXP .)
    having          reduce using rule 12 (WHERE -> where EXP .)
    ptcoma          reduce using rule 12 (WHERE -> where EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 80

    (11) LFROM -> para SELECT parc .

    where           reduce using rule 11 (LFROM -> para SELECT parc .)
    group           reduce using rule 11 (LFROM -> para SELECT parc .)
    having          reduce using rule 11 (LFROM -> para SELECT parc .)
    ptcoma          reduce using rule 11 (LFROM -> para SELECT parc .)


state 81

    (6) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP . HAVING
    (16) HAVING -> . having EXP
    (17) HAVING -> . ptcoma

    having          shift and go to state 83
    ptcoma          shift and go to state 84

    HAVING                         shift and go to state 86

state 82

    (7) SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING .

    not             reduce using rule 7 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING .)
    select          reduce using rule 7 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING .)
    $end            reduce using rule 7 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING .)
    parc            reduce using rule 7 (SELECT -> select LSELECT r_from LFROM WHERE GROUP HAVING .)


state 83

    (16) HAVING -> having . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 87
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 84

    (17) HAVING -> ptcoma .

    not             reduce using rule 17 (HAVING -> ptcoma .)
    select          reduce using rule 17 (HAVING -> ptcoma .)
    $end            reduce using rule 17 (HAVING -> ptcoma .)
    parc            reduce using rule 17 (HAVING -> ptcoma .)


state 85

    (14) GROUP -> group by . EXP
    (31) EXP -> . EXP mas EXP1
    (32) EXP -> . EXP menos EXP1
    (33) EXP -> . EXP multiplicacion EXP1
    (34) EXP -> . EXP division EXP1
    (35) EXP -> . EXP1
    (36) EXP1 -> . EXP1 modulo EXP2
    (37) EXP1 -> . EXP1 elevado EXP2
    (38) EXP1 -> . EXP2
    (39) EXP2 -> . para EXP parac
    (40) EXP2 -> . UNARIO EXP
    (41) EXP2 -> . int
    (42) EXP2 -> . decimal
    (43) EXP2 -> . varchar
    (44) EXP2 -> . char
    (45) EXP2 -> . true
    (46) EXP2 -> . false
    (47) EXP2 -> . id
    (48) EXP2 -> . id punto EXP
    (49) UNARIO -> . mas
    (50) UNARIO -> . menos

    para            shift and go to state 17
    int             shift and go to state 19
    decimal         shift and go to state 20
    varchar         shift and go to state 21
    char            shift and go to state 22
    true            shift and go to state 23
    false           shift and go to state 24
    id              shift and go to state 25
    mas             shift and go to state 13
    menos           shift and go to state 15

    EXP                            shift and go to state 88
    EXP1                           shift and go to state 14
    EXP2                           shift and go to state 16
    UNARIO                         shift and go to state 18

state 86

    (6) SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING .

    not             reduce using rule 6 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING .)
    select          reduce using rule 6 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING .)
    $end            reduce using rule 6 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING .)
    parc            reduce using rule 6 (SELECT -> select distinct LSELECT r_from LFROM WHERE GROUP HAVING .)


state 87

    (16) HAVING -> having EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    not             reduce using rule 16 (HAVING -> having EXP .)
    select          reduce using rule 16 (HAVING -> having EXP .)
    $end            reduce using rule 16 (HAVING -> having EXP .)
    parc            reduce using rule 16 (HAVING -> having EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43


state 88

    (14) GROUP -> group by EXP .
    (31) EXP -> EXP . mas EXP1
    (32) EXP -> EXP . menos EXP1
    (33) EXP -> EXP . multiplicacion EXP1
    (34) EXP -> EXP . division EXP1

    having          reduce using rule 14 (GROUP -> group by EXP .)
    ptcoma          reduce using rule 14 (GROUP -> group by EXP .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    multiplicacion  shift and go to state 42
    division        shift and go to state 43

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for modulo in state 14 resolved as shift
WARNING: shift/reduce conflict for elevado in state 14 resolved as shift
WARNING: shift/reduce conflict for mas in state 47 resolved as shift
WARNING: shift/reduce conflict for menos in state 47 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 47 resolved as shift
WARNING: shift/reduce conflict for division in state 47 resolved as shift
WARNING: shift/reduce conflict for modulo in state 59 resolved as shift
WARNING: shift/reduce conflict for elevado in state 59 resolved as shift
WARNING: shift/reduce conflict for modulo in state 60 resolved as shift
WARNING: shift/reduce conflict for elevado in state 60 resolved as shift
WARNING: shift/reduce conflict for modulo in state 61 resolved as shift
WARNING: shift/reduce conflict for elevado in state 61 resolved as shift
WARNING: shift/reduce conflict for modulo in state 62 resolved as shift
WARNING: shift/reduce conflict for elevado in state 62 resolved as shift
WARNING: shift/reduce conflict for mas in state 66 resolved as shift
WARNING: shift/reduce conflict for menos in state 66 resolved as shift
WARNING: shift/reduce conflict for multiplicacion in state 66 resolved as shift
WARNING: shift/reduce conflict for division in state 66 resolved as shift
